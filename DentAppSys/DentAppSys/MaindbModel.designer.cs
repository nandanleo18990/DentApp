#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DentAppSys
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dental")]
	public partial class MaindbModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPatient(Patient instance);
    partial void UpdatePatient(Patient instance);
    partial void DeletePatient(Patient instance);
    partial void InsertAppointment(Appointment instance);
    partial void UpdateAppointment(Appointment instance);
    partial void DeleteAppointment(Appointment instance);
    partial void InsertPatientFile(PatientFile instance);
    partial void UpdatePatientFile(PatientFile instance);
    partial void DeletePatientFile(PatientFile instance);
    #endregion
		
		public MaindbModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dentalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MaindbModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MaindbModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MaindbModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MaindbModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Doctor> Doctors
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<Office> Offices
		{
			get
			{
				return this.GetTable<Office>();
			}
		}
		
		public System.Data.Linq.Table<Patient> Patients
		{
			get
			{
				return this.GetTable<Patient>();
			}
		}
		
		public System.Data.Linq.Table<Appointment> Appointments
		{
			get
			{
				return this.GetTable<Appointment>();
			}
		}
		
		public System.Data.Linq.Table<PatientFile> PatientFiles
		{
			get
			{
				return this.GetTable<PatientFile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor
	{
		
		private string _DrNo;
		
		private string _Name;
		
		private string _Surname;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _PhoneNo;
		
		private string _Email;
		
		private string _Password;
		
		private string _IdNo;
		
		private string _Address;
		
		public Doctor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrNo", DbType="NVarChar(50)")]
		public string DrNo
		{
			get
			{
				return this._DrNo;
			}
			set
			{
				if ((this._DrNo != value))
				{
					this._DrNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="NVarChar(50)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this._PhoneNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", DbType="NVarChar(50)")]
		public string IdNo
		{
			get
			{
				return this._IdNo;
			}
			set
			{
				if ((this._IdNo != value))
				{
					this._IdNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Office")]
	public partial class Office
	{
		
		private string _Address;
		
		private string _WorkingHours;
		
		private string _Holidays;
		
		public Office()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="NVarChar(50)")]
		public string WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this._WorkingHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Holidays", DbType="NVarChar(50)")]
		public string Holidays
		{
			get
			{
				return this._Holidays;
			}
			set
			{
				if ((this._Holidays != value))
				{
					this._Holidays = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Patient")]
	public partial class Patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PatientNo;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Gender;
		
		private string _Address;
		
		private string _PhoneNo;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<bool> _Active;
		
		private string _IDNo;
		
		private string _BloodType;
		
		private System.Nullable<bool> _HaveAdditionalInfo;
		
		private string _AdditionalInfo;
		
		private string _MarialStatus;
		
		private string _PasswordSalt;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private EntitySet<Appointment> _Appointments;
		
		private EntitySet<PatientFile> _PatientFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientNoChanging(int value);
    partial void OnPatientNoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNoChanging(string value);
    partial void OnPhoneNoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnIDNoChanging(string value);
    partial void OnIDNoChanged();
    partial void OnBloodTypeChanging(string value);
    partial void OnBloodTypeChanged();
    partial void OnHaveAdditionalInfoChanging(System.Nullable<bool> value);
    partial void OnHaveAdditionalInfoChanged();
    partial void OnAdditionalInfoChanging(string value);
    partial void OnAdditionalInfoChanged();
    partial void OnMarialStatusChanging(string value);
    partial void OnMarialStatusChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    #endregion
		
		public Patient()
		{
			this._Appointments = new EntitySet<Appointment>(new Action<Appointment>(this.attach_Appointments), new Action<Appointment>(this.detach_Appointments));
			this._PatientFiles = new EntitySet<PatientFile>(new Action<PatientFile>(this.attach_PatientFiles), new Action<PatientFile>(this.detach_PatientFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PatientNo
		{
			get
			{
				return this._PatientNo;
			}
			set
			{
				if ((this._PatientNo != value))
				{
					this.OnPatientNoChanging(value);
					this.SendPropertyChanging();
					this._PatientNo = value;
					this.SendPropertyChanged("PatientNo");
					this.OnPatientNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNo", DbType="NVarChar(50)")]
		public string PhoneNo
		{
			get
			{
				return this._PhoneNo;
			}
			set
			{
				if ((this._PhoneNo != value))
				{
					this.OnPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._PhoneNo = value;
					this.SendPropertyChanged("PhoneNo");
					this.OnPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNo", DbType="NVarChar(50)")]
		public string IDNo
		{
			get
			{
				return this._IDNo;
			}
			set
			{
				if ((this._IDNo != value))
				{
					this.OnIDNoChanging(value);
					this.SendPropertyChanging();
					this._IDNo = value;
					this.SendPropertyChanged("IDNo");
					this.OnIDNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BloodType", DbType="NVarChar(50)")]
		public string BloodType
		{
			get
			{
				return this._BloodType;
			}
			set
			{
				if ((this._BloodType != value))
				{
					this.OnBloodTypeChanging(value);
					this.SendPropertyChanging();
					this._BloodType = value;
					this.SendPropertyChanged("BloodType");
					this.OnBloodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaveAdditionalInfo", DbType="Bit")]
		public System.Nullable<bool> HaveAdditionalInfo
		{
			get
			{
				return this._HaveAdditionalInfo;
			}
			set
			{
				if ((this._HaveAdditionalInfo != value))
				{
					this.OnHaveAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._HaveAdditionalInfo = value;
					this.SendPropertyChanged("HaveAdditionalInfo");
					this.OnHaveAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo", DbType="NVarChar(50)")]
		public string AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this.OnAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInfo = value;
					this.SendPropertyChanged("AdditionalInfo");
					this.OnAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarialStatus", DbType="NVarChar(50)")]
		public string MarialStatus
		{
			get
			{
				return this._MarialStatus;
			}
			set
			{
				if ((this._MarialStatus != value))
				{
					this.OnMarialStatusChanging(value);
					this.SendPropertyChanging();
					this._MarialStatus = value;
					this.SendPropertyChanged("MarialStatus");
					this.OnMarialStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NChar(200)")]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Appointment", Storage="_Appointments", ThisKey="PatientNo", OtherKey="PatientNo")]
		public EntitySet<Appointment> Appointments
		{
			get
			{
				return this._Appointments;
			}
			set
			{
				this._Appointments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_PatientFile", Storage="_PatientFiles", ThisKey="PatientNo", OtherKey="PatientNo")]
		public EntitySet<PatientFile> PatientFiles
		{
			get
			{
				return this._PatientFiles;
			}
			set
			{
				this._PatientFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_Appointments(Appointment entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
		
		private void attach_PatientFiles(PatientFile entity)
		{
			this.SendPropertyChanging();
			entity.Patient = this;
		}
		
		private void detach_PatientFiles(PatientFile entity)
		{
			this.SendPropertyChanging();
			entity.Patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appointment")]
	public partial class Appointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppNo;
		
		private System.Nullable<int> _PatientNo;
		
		private string _DrNo;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Status;
		
		private string _Description;
		
		private string _DrDescription;
		
		private EntitySet<PatientFile> _PatientFiles;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppNoChanging(int value);
    partial void OnAppNoChanged();
    partial void OnPatientNoChanging(System.Nullable<int> value);
    partial void OnPatientNoChanged();
    partial void OnDrNoChanging(string value);
    partial void OnDrNoChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDrDescriptionChanging(string value);
    partial void OnDrDescriptionChanged();
    #endregion
		
		public Appointment()
		{
			this._PatientFiles = new EntitySet<PatientFile>(new Action<PatientFile>(this.attach_PatientFiles), new Action<PatientFile>(this.detach_PatientFiles));
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AppNo
		{
			get
			{
				return this._AppNo;
			}
			set
			{
				if ((this._AppNo != value))
				{
					this.OnAppNoChanging(value);
					this.SendPropertyChanging();
					this._AppNo = value;
					this.SendPropertyChanged("AppNo");
					this.OnAppNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNo", DbType="Int")]
		public System.Nullable<int> PatientNo
		{
			get
			{
				return this._PatientNo;
			}
			set
			{
				if ((this._PatientNo != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientNoChanging(value);
					this.SendPropertyChanging();
					this._PatientNo = value;
					this.SendPropertyChanged("PatientNo");
					this.OnPatientNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrNo", DbType="NVarChar(50)")]
		public string DrNo
		{
			get
			{
				return this._DrNo;
			}
			set
			{
				if ((this._DrNo != value))
				{
					this.OnDrNoChanging(value);
					this.SendPropertyChanging();
					this._DrNo = value;
					this.SendPropertyChanged("DrNo");
					this.OnDrNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrDescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string DrDescription
		{
			get
			{
				return this._DrDescription;
			}
			set
			{
				if ((this._DrDescription != value))
				{
					this.OnDrDescriptionChanging(value);
					this.SendPropertyChanging();
					this._DrDescription = value;
					this.SendPropertyChanged("DrDescription");
					this.OnDrDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Appointment_PatientFile", Storage="_PatientFiles", ThisKey="AppNo", OtherKey="AppNo")]
		public EntitySet<PatientFile> PatientFiles
		{
			get
			{
				return this._PatientFiles;
			}
			set
			{
				this._PatientFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_Appointment", Storage="_Patient", ThisKey="PatientNo", OtherKey="PatientNo", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.Appointments.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.Appointments.Add(this);
						this._PatientNo = value.PatientNo;
					}
					else
					{
						this._PatientNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PatientFiles(PatientFile entity)
		{
			this.SendPropertyChanging();
			entity.Appointment = this;
		}
		
		private void detach_PatientFiles(PatientFile entity)
		{
			this.SendPropertyChanging();
			entity.Appointment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientFile")]
	public partial class PatientFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppNo;
		
		private int _PatientNo;
		
		private string _Prescription;
		
		private string _TreatmentDetails;
		
		private string _Status;
		
		private System.Data.Linq.Binary _Image;
		
		private EntityRef<Appointment> _Appointment;
		
		private EntityRef<Patient> _Patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppNoChanging(int value);
    partial void OnAppNoChanged();
    partial void OnPatientNoChanging(int value);
    partial void OnPatientNoChanged();
    partial void OnPrescriptionChanging(string value);
    partial void OnPrescriptionChanged();
    partial void OnTreatmentDetailsChanging(string value);
    partial void OnTreatmentDetailsChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    #endregion
		
		public PatientFile()
		{
			this._Appointment = default(EntityRef<Appointment>);
			this._Patient = default(EntityRef<Patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AppNo
		{
			get
			{
				return this._AppNo;
			}
			set
			{
				if ((this._AppNo != value))
				{
					if (this._Appointment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppNoChanging(value);
					this.SendPropertyChanging();
					this._AppNo = value;
					this.SendPropertyChanged("AppNo");
					this.OnAppNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PatientNo
		{
			get
			{
				return this._PatientNo;
			}
			set
			{
				if ((this._PatientNo != value))
				{
					if (this._Patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatientNoChanging(value);
					this.SendPropertyChanging();
					this._PatientNo = value;
					this.SendPropertyChanged("PatientNo");
					this.OnPatientNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prescription", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Prescription
		{
			get
			{
				return this._Prescription;
			}
			set
			{
				if ((this._Prescription != value))
				{
					this.OnPrescriptionChanging(value);
					this.SendPropertyChanging();
					this._Prescription = value;
					this.SendPropertyChanged("Prescription");
					this.OnPrescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentDetails", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TreatmentDetails
		{
			get
			{
				return this._TreatmentDetails;
			}
			set
			{
				if ((this._TreatmentDetails != value))
				{
					this.OnTreatmentDetailsChanging(value);
					this.SendPropertyChanging();
					this._TreatmentDetails = value;
					this.SendPropertyChanged("TreatmentDetails");
					this.OnTreatmentDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Appointment_PatientFile", Storage="_Appointment", ThisKey="AppNo", OtherKey="AppNo", IsForeignKey=true)]
		public Appointment Appointment
		{
			get
			{
				return this._Appointment.Entity;
			}
			set
			{
				Appointment previousValue = this._Appointment.Entity;
				if (((previousValue != value) 
							|| (this._Appointment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Appointment.Entity = null;
						previousValue.PatientFiles.Remove(this);
					}
					this._Appointment.Entity = value;
					if ((value != null))
					{
						value.PatientFiles.Add(this);
						this._AppNo = value.AppNo;
					}
					else
					{
						this._AppNo = default(int);
					}
					this.SendPropertyChanged("Appointment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Patient_PatientFile", Storage="_Patient", ThisKey="PatientNo", OtherKey="PatientNo", IsForeignKey=true)]
		public Patient Patient
		{
			get
			{
				return this._Patient.Entity;
			}
			set
			{
				Patient previousValue = this._Patient.Entity;
				if (((previousValue != value) 
							|| (this._Patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Patient.Entity = null;
						previousValue.PatientFiles.Remove(this);
					}
					this._Patient.Entity = value;
					if ((value != null))
					{
						value.PatientFiles.Add(this);
						this._PatientNo = value.PatientNo;
					}
					else
					{
						this._PatientNo = default(int);
					}
					this.SendPropertyChanged("Patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
